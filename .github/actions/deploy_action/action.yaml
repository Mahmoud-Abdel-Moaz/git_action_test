name: 'Deploy Action'
description: 'This is my reusable action'
inputs:
  flavor:
    description: 'flavor'
    required: true
    default: 'blink'
  SSH_PRIVATE_KEY:
    description: 'SSH_PRIVATE_KEY'
  blink_key_store:
    description: 'flavor'
  blink_store_password:
    description: 'flavor'
  blink_key_password:
    description: 'flavor'
  blink_key_alias:
    description: 'flavor'
  unity_key_store:
    description: 'flavor'
  unity_store_password:
    description: 'flavor'
  unity_key_password:
    description: 'flavor'
  unity_key_alias:
    description: 'flavor'
  sportico_key_store:
    description: 'flavor'
  sportico_store_password:
    description: 'flavor'
  sportico_key_password:
    description: 'flavor'
  sportico_key_alias:
    description: 'flavor'
  firebase_file:
    description: 'firebase google service file'
  FIREBASE_APP_ID:
    description: 'FIREBASE_APP_ID'
  CREDENTIAL_FILE_CONTENT:
    description: 'CREDENTIAL_FILE_CONTENT'
  release_on:
    description: 'release on'
  SERVER_WORK_ON:
    description: 'SERVER_WORK_ON'
  RELEASE_NOTE:
    description: 'RELEASE_NOTE'

runs:
  using: "composite"
  steps:

    # Make sure the @v0.8.0 matches the current version of the action
    - uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ inputs.SSH_PRIVATE_KEY }}


    - name: Download blink Android keystore
      id: android_blink_keystore
      uses: timheuer/base64-to-file@v1.0.3
      with:
        fileName: blink-keystore.jks
        encodedString: ${{ inputs.blink_key_store }}

    - name: Download unity Android keystore
      id: android_unity_keystore
      uses: timheuer/base64-to-file@v1.0.3
      with:
        fileName: unity-keystore.jks
        encodedString: ${{ inputs.unity_key_store }}

    - name: Download sportico Android keystore
      id: android_sportico_keystore
      uses: timheuer/base64-to-file@v1.0.3
      with:
        fileName: sportico-keystore.jks
        encodedString: ${{ inputs.sportico_key_store }}


    - name: Create key.properties
      run: |
        echo "storeFile=${{ steps.android_blink_keystore.outputs.filePath }}" > android/key1.properties
        echo "storePassword=${{ inputs.blink_store_password }}" >> android/key1.properties
        echo "keyPassword=${{ inputs.blink_key_password }}" >> android/key1.properties
        echo "keyAlias=${{ inputs.blink_key_alias }}" >> android/key1.properties
        
        echo "storeFile=${{ steps.android_unity_keystore.outputs.filePath }}" > android/key2.properties
        echo "storePassword=${{ inputs.unity_store_password }}" >> android/key2.properties
        echo "keyPassword=${{ inputs.unity_key_password }}" >> android/key2.properties
        echo "keyAlias=${{ inputs.unity_key_alias }}" >> android/key2.properties
        
        echo "storeFile=${{ steps.android_sportico_keystore.outputs.filePath }}" > android/key3.properties
        echo "storePassword=${{ inputs.sportico_store_password }}" >> android/key3.properties
        echo "keyPassword=${{ inputs.sportico_key_password }}" >> android/key3.properties
        echo "keyAlias=${{ inputs.sportico_key_alias }}" >> android/key3.properties
      shell: bash

    - uses: actions/setup-java@v1
      with:
        distribution: 'zulu'
        java-version: "17"
        cache: gradle
        check-latest: true

    - uses: subosito/flutter-action@v1
      with:
        flutter-version: "3.16.1"
        channel: 'stable'
        cache: true

    - name: Download firebase google services for blink
      run: echo "${{inputs.firebase_file}}" | base64 -d > android/app/src/${{ inputs.flavor }}/google-services.json
      shell: bash


    - name: Get dependencies
      run: flutter pub get
      shell: bash

    - name: Start Android Release Build
      run: flutter build apk --flavor ${{ inputs.flavor }} -t lib/main.dart
      shell: bash


    # Upload Android Blink
    - name: Upload Android Release
      uses: actions/upload-artifact@v2
      with:
        name: android-blink-release
        path: build/app/outputs/flutter-apk/app-${{ inputs.flavor }}-release.apk

        # Distribution Blink
    - name: Firebase Blink Distribution
      if: contains("${{ inputs.release_on }}", 'firebase')
      uses: wzieba/Firebase-Distribution-Github-Action@v1.7.0
      with:
        appId: ${{inputs.FIREBASE_APP_ID}}
        serviceCredentialsFileContent: ${{ inputs.CREDENTIAL_FILE_CONTENT }}
        groups: testers
        file: build/app/outputs/flutter-apk/app-${{ inputs.flavor }}-release.apk
        releaseNotes: "Blink Apk \n ${{ inputs.SERVER_WORK_ON }} \n ${{ inputs.RELEASE_NOTE }}"
        #          releaseNotes:  "${{ github.event.head_commit.message }}"