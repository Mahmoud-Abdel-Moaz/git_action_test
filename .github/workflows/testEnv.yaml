on:
  pull_request:
    branches:
      - main
      - master
  push:
    branches:
      - main
      - master
      - develop
name: "Build & Release (Change APP Name)"
jobs:
  version:
    name: Create version number
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3
      # 2
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: "5.x"
      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
      # 3
      - name: Create version.txt with nuGetVersion
        run: echo ${{ steps.gitversion.outputs.nuGetVersion  }} > version.txt
      # 4
      - name: Upload version.txt
        uses: actions/upload-artifact@v2
        with:
          name: gitversion
          path: version.txt
  build:
    name: Build & Release
    needs: version
    runs-on: macos-latest
    environment: hallo
    env:
      APP_NAME: ${{vars.APP_NAME}}
      PACKAGE_NAME: ${{vars.PACKAGE_NAME}}
      LOGO: ${{vars.LOGO}}
      DOTENV: ${{vars.DOTENV}}
    steps:
      - uses: actions/checkout@v1
        # 2
      - name: Get version.txt
        uses: actions/download-artifact@v2
        with:
          name: gitversion
      - name: Create new file without newline char from version.txt
        run: tr -d '\n' < version.txt > version1.txt
      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: version1.txt
        # 5
      - name: Update version in YAML
        run: sed -i 's/99.99.99+99/${{ steps.version.outputs.content }}+${{ github.run_number }}/g' pubspec.yaml
      - uses: actions/setup-java@v1
        with:
          distribution: 'zulu'
          java-version: "12.x"
          cache: gradle
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: "3.16.1"
          channel: 'stable'
          cache: true
      - name: Change App Name
        run: sed -i.bak "s/android:label=.*/android:label=\"$APP_NAME\"/g" android/app/src/main/AndroidManifest.xml
      - name: Change App Package Id
        run: |
          echo "android {  defaultConfig { applicationId '${PACKAGE_NAME}' }  }" > android/changePackage.gradle
          echo "apply from: rootProject.file('changePackage.gradle')" >> android/app/build.gradle
      # 6 Download logo
      - name: Download Logo Image
        run: echo "$LOGO" | base64 -d > assets/images/logo.png
      - name: Download env file
        run: echo "$DOTENV" | base64 -d > client.env
      - name: Get dependencies
        run: flutter pub get
      - name: Generate App Assets
        run: flutter pub run flutter_launcher_icons
      - name: Start Android Release Build
        run: flutter build apk
      - name: Upload Android Release
        uses: actions/upload-artifact@v2
        with:
          name: android-release
          path: build/app/outputs/flutter-apk/app-release.apk



#echo "android {  defaultConfig { applicationId '${PACKAGE_NAME}' }  }" > android/changePackage.gradle
  #          echo "apply from: rootProject.file('changePackage.gradle')" >> android/app/build.gradle
  #push to master , main, develop
  #pull request on main master


        #      - name: Download Logo Image
        #        id: app_logo
        #        uses: timheuer/base64-to-file@v1.0.3
        #        with:
        #          fileName: logo.png
        #          fileDir: './assets/images/'
        #          encodedString: $LOGO
        # 7 Download .env file
        #echo $DOTENV | base64 --decode > client.env
  #      - name: Download env file
  #        id: app_env
  #        uses: timheuer/base64-to-file@v1.0.3
  #        with:
  #          fileDir: './assets/'
  #          fileName: ./assets/client.env
  #          encodedString: $DOTENV
  #      - name: test env
  #        run: |
  #          echo "${{ steps.app_env.outputs.filePath }}"
  #          print "${{ steps.app_env.outputs.filePath }}"