on:
  pull_request:
    branches:
      - main
      - master
  push:
    branches:
      - main
      - master
      - develop
name: "Build & Release (Change APP Name)"
jobs:
  build:
    name: Build & Release
    runs-on: macos-latest
    environment: hallo
    env:
      APP_NAME: ${{vars.APP_NAME}}
      PACKAGE_NAME: ${{vars.PACKAGE_NAME}}
      LOGO: ${{vars.LOGO}}
      DOTENV: ${{vars.DOTENV}}
    steps:
      - uses: actions/checkout@v1
      # 6 Decoded the base64 encoded keystore value saved as a secret to ID android_keystore
      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: upload-keystore.jks
          encodedString: ${{ secrets.KEYSTORE_BASE64 }}
      # 7 Created key.properties using the secrets and android_keystore
      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
      - uses: actions/setup-java@v1
        with:
          distribution: 'zulu'
          java-version: "12.x"
          cache: gradle
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: "3.16.1"
          channel: 'stable'
          cache: true
      - name: Change App Name
        run: sed -i.bak "s/android:label=.*/android:label=\"$APP_NAME\"/g" android/app/src/main/AndroidManifest.xml
      - name: Change App Package Id
        run: |
          echo "android {  defaultConfig { applicationId '${PACKAGE_NAME}' }  }" > android/changePackage.gradle
          echo "apply from: rootProject.file('changePackage.gradle')" >> android/app/build.gradle
      # 6 Download logo
      - name: Download Logo Image
        run: echo "$LOGO" | base64 -d > assets/images/logo.png
      - name: Download env file
        run: echo "$DOTENV" | base64 -d > client.env
      - name: Get dependencies
        run: flutter pub get
      - name: Generate App Assets
        run: flutter pub run flutter_launcher_icons
      - name: Start Android Release Build
        run: flutter build apk
      - name: Upload Android Release
        uses: actions/upload-artifact@v2
        with:
          name: android-release
          path: build/app/outputs/flutter-apk/app-release.apk
      - name: push to Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/flutter-apk/*"
          tag: v1.0.${{github.run_number}}
          token: ${{secrets.TOKEN}}



#echo "android {  defaultConfig { applicationId '${PACKAGE_NAME}' }  }" > android/changePackage.gradle
  #          echo "apply from: rootProject.file('changePackage.gradle')" >> android/app/build.gradle
  #push to master , main, develop
  #pull request on main master


        #      - name: Download Logo Image
        #        id: app_logo
        #        uses: timheuer/base64-to-file@v1.0.3
        #        with:
        #          fileName: logo.png
        #          fileDir: './assets/images/'
        #          encodedString: $LOGO
        # 7 Download .env file
        #echo $DOTENV | base64 --decode > client.env
  #      - name: Download env file
  #        id: app_env
  #        uses: timheuer/base64-to-file@v1.0.3
  #        with:
  #          fileDir: './assets/'
  #          fileName: ./assets/client.env
  #          encodedString: $DOTENV
  #      - name: test env
  #        run: |
  #          echo "${{ steps.app_env.outputs.filePath }}"
  #          print "${{ steps.app_env.outputs.filePath }}"