name: Deploy Screenshots to Google Play
on:
  workflow_dispatch:
    inputs:
      package_id:
        description: 'Application Package Id'
        default: 'com.getaction.hello'
        required: true
      title:
        description: 'Application title'
        default: ''
      short_description:
        description: 'Application Short Description'
        default: ''
      full_description:
        description: 'Application Full Description'
        default: ''
      icon:
        description: 'IconÙ‘'
        default: ''
      feature_graphic:
        description: 'feature Graphic'
        default: ''
      phone_screenshots:
        description: 'phone screenshots'
        default: ''
      seven_inch_screenshots:
        description: 'Seven Inch screenshots'
        default: ''
      ten_inch_screenshots:
        description: 'Ten Inch screenshots'
        default: ''
      language:
        description: 'Language'
        default: 'en-US'


#  push:
#    branches:
#      - main
#      - master # change this if your main branch has a different name

jobs:
  release:
    runs-on: ubuntu-latest
    environment: hallo
    if: github.event.inputs.package_id != '' && (github.event.inputs.title != '' || github.event.inputs.short_description != '' || github.event.inputs.full_description != '' ||  github.event.inputs.icon != '' || github.event.inputs.feature_graphic != '' || github.event.inputs.phone_screenshots != '' || github.event.inputs.seven_inch_screenshots != '' || github.event.inputs.ten_inch_screenshots != '')
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

#      - name: printInputs
#        run: |
#          echo "Log level: ${{ github.event.inputs.logLevel }}"
#          echo "Tags: ${{ github.event.inputs.tags }}"
        

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6


      #  Package Id
      - name: Set Application Package Id
        run: |
          echo 'package_name("${{ github.event.inputs.package_id}}")' >> android/fastlane/Appfile
     #     echo 'json_key_file("play-store-credentials.json")' >> android/fastlane/Appfile

      #  Title
      - name: Set Application Title
        if: github.event.inputs.title != ''
        run: |
          touch android/fastlane/metadata/android/${{ github.event.inputs.language }}/title.txt
          echo '${{ github.event.inputs.title }}' > android/fastlane/metadata/android/${{ github.event.inputs.language }}/title.txt

      #  Short Description
      - name: Set Application Short Description
        if: github.event.inputs.short_description != ''
        run: |
          echo '${{ github.event.inputs.short_description }}' > android/fastlane/metadata/android/${{ github.event.inputs.language }}/short_description.txt

      #  Full Description
      - name: Set Application Full Description
        if: github.event.inputs.full_description != ''
        run: |
          echo '${{ github.event.inputs.full_description }}' > android/fastlane/metadata/android/${{ github.event.inputs.language }}/full_description.txt

#      - name: Set Application Icon
#        if: github.event.inputs.icon != ''
#        run: curl -L ${{ github.event.inputs.icon }} -o android/fastlane/metadata/android/en-US/images/icon.png

      #  Icon
#      - name: Set Application Icon
#        uses: ./.github/actions/deploy_action
#        with:
#          url: ${{ github.event.inputs.icon }}
#          filepath: android/fastlane/metadata/android/${{ github.event.inputs.language }}/images/
#          filename: icon.png
#        if: github.event.inputs.icon != ''
      - name: Set Application Icon
        uses: suisei-cn/actions-download-file@v1  # Download file action
        if: github.event.inputs.icon != ''
        with:
          url: ${{ github.event.inputs.icon }}  # URL of the file
          target: android/fastlane/metadata/android/en-US/images/  # Optional, target directory (defaults to current directory)
          filename: icon.png  # Optional, desired filename

      #  feature Graphic
      - name: Set Application feature Graphic
        if: github.event.inputs.feature_graphic != ''
        uses: suisei-cn/actions-download-file@v1
        with:
          url: ${{ github.event.inputs.feature_graphic }}
          target: android/fastlane/metadata/android/${{ github.event.inputs.language }}/images/
          filename: featureGraphic.png

      # phone screenshots
      - name: Set Application screenshots
        uses: ./.github/actions/download_screenshots_action
        with:
          urls: ${{ github.event.inputs.phone_screenshots }}
          filepath: android/fastlane/metadata/android/${{ github.event.inputs.language }}/images/phoneScreenshots/
          language: ${{ github.event.inputs.language }}
        if: github.event.inputs.phone_screenshots != ''

      # Seven inch screenshots
      - name: Set Application Seven inch screenshots
        uses: ./.github/actions/download_screenshots_action
        with:
          urls: ${{ github.event.inputs.seven_inch_screenshots }}
          filepath: android/fastlane/metadata/android/${{ github.event.inputs.language }}/images/sevenInchScreenshots/
          language: ${{ github.event.inputs.language }}
        if: github.event.inputs.seven_inch_screenshots != ''

      # Ten inch screenshots
      - name: Set Application Ten inch screenshots
        uses: ./.github/actions/download_screenshots_action
        with:
          urls: ${{ github.event.inputs.ten_inch_screenshots }}
          filepath: android/fastlane/metadata/android/${{ github.event.inputs.language }}/images/tenInchScreenshots/
          language: ${{ github.event.inputs.language }}
        if: github.event.inputs.ten_inch_screenshots != ''



      - name: Deploy Screenshots to Google Play
        run: |
          echo '${{ secrets.PLAYSTORE_ACCOUNT_KEY }}' > android/play-store-credentials.json
          cd android
          fastlane supply --skip_upload_changelogs true

      - name: ${{github.event.inputs.id}}
        run: echo run identifier ${{ inputs.title }}

      - name: Report Status
        if: always()
        uses: ravsamhq/notify-slack-action@v2
        with:
          status: ${{ job.status }}
          notification_title: "{workflow} has {status_message}"
          footer: "Linked Repo <{repo_url}|{repo}>"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

        #fastlane supply init
        #echo '${{ secrets.PLAYSTORE_ACCOUNT_KEY }}' > json/key.json
        #fastlane supply --metadata_path fastlane/metadata/android --json_key json/key.json --skip_upload_changelogs true

       # fastlane supply --skip_upload_changelogs true --package_name com.getaction.hello --json_key play-store-credentials.json
        #workflow id  =>  change-screenshots-google-store