on:
  pull_request:
    branches:
      - main
      - master
  push:
    branches:
      - main
      - master
      - develop

#  androidBlink # server staging # fixing blink home page \n version 2.5.0 build 5 - fixing  home page \n version 1.0.0 build 9 - fixing home page \n version 1.0.0 build 5 # apk, firebase
name: "Build Android With Condition "
jobs:
#  starter-job:
#    name: Set Configrations
#    runs-on: ubuntu-latest
#    environment: hallo
#    env:
#      BLINK_FIREBASE: ${{secrets.FIREBASE_GOOGLE_SERVICES_BLINK}}
#    if: (!contains(github.event.head_commit.message, 'ignore')&&contains(github.event.head_commit.message, 'android'))
#    steps:
#      - name: Download blink Android keystore
#        id: android_blink_keystore
#        uses: timheuer/base64-to-file@v1.0.3
#        with:
#          fileName: blink-keystore.jks
#          encodedString: ${{ secrets.KEYSTORE_BASE64_BLINK }}
#
#      - name: Download unity Android keystore
#        id: android_unity_keystore
#        uses: timheuer/base64-to-file@v1.0.3
#        with:
#          fileName: unity-keystore.jks
#          encodedString: ${{ secrets.KEYSTORE_BASE64_UNITY }}
#
#      - name: Download sportico Android keystore
#        id: android_sportico_keystore
#        uses: timheuer/base64-to-file@v1.0.3
#        with:
#          fileName: sportico-keystore.jks
#          encodedString: ${{ secrets.KEYSTORE_BASE64_SPORTICO }}
#
#
#      - name: Create key.properties
#        run: |
#          echo "storeFile=${{ steps.android_blink_keystore.outputs.filePath }}" > android/key1.properties
#          echo "storePassword=${{ secrets.STORE_PASSWORD_BLINK }}" >> android/key1.properties
#          echo "keyPassword=${{ secrets.KEY_PASSWORD_BLINK }}" >> android/key1.properties
#          echo "keyAlias=${{ secrets.KEY_ALIAS_BLINK }}" >> android/key1.properties
#
#          echo "storeFile=${{ steps.android_unity_keystore.outputs.filePath }}" > android/key2.properties
#          echo "storePassword=${{ secrets.STORE_PASSWORD_UNITY }}" >> android/key2.properties
#          echo "keyPassword=${{ secrets.KEY_PASSWORD_UNITY }}" >> android/key2.properties
#          echo "keyAlias=${{ secrets.KEY_ALIAS_UNITY }}" >> android/key2.properties
#
#          echo "storeFile=${{ steps.android_sportico_keystore.outputs.filePath }}" > android/key3.properties
#          echo "storePassword=${{ secrets.STORE_PASSWORD_SPORTICO }}" >> android/key3.properties
#          echo "keyPassword=${{ secrets.KEY_PASSWORD_SPORTICO }}" >> android/key3.properties
#          echo "keyAlias=${{ secrets.KEY_ALIAS_SPORTICO }}" >> android/key3.properties
#
#      - uses: actions/setup-java@v1
#        with:
#          distribution: 'zulu'
#          java-version: "12.x"
#          cache: gradle
#      - uses: subosito/flutter-action@v1
#        with:
#          flutter-version: "3.16.1"
#          channel: 'stable'
#          cache: true
#
#
#      - name: Download firebase google services for blink
#        run: echo "$BLINK_FIREBASE" | base64 -d > android/app/src/blink/google-services.json


  build_blink:
    name: Build Blink
    runs-on: ubuntu-latest
    environment: hallo
    env:
      BLINK_FIREBASE: ${{secrets.FIREBASE_GOOGLE_SERVICES_BLINK}}
    if: (!contains(github.event.head_commit.message, 'ignore')&&(contains(github.event.head_commit.message, 'androidBlink') || contains(github.event.head_commit.message, 'all')))
    steps:

      - uses: actions/checkout@v1
          #Comment Split
      ###########################

      - name: Split Commit Message
        run: |
          COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
          IFS="#" read -ra COMMIT_WORDS <<< "$COMMIT_MESSAGE"
          echo "WORK_APPS=${COMMIT_WORDS[0]}" >> $GITHUB_ENV
          echo "SERVER_WORK_ON=${COMMIT_WORDS[1]}" >> $GITHUB_ENV
          echo "APPS_RELEASE_NOTES=${COMMIT_WORDS[2]}" >> $GITHUB_ENV
          echo "RELEASE_ON=${COMMIT_WORDS[3]}" >> $GITHUB_ENV

      # blink
      - name: Get Release Note
        run: |
          IFS="-" read -ra COMMIT_WORDS <<< "${{ env.APPS_RELEASE_NOTES }}"
          echo "RELEASE_NOTE=${COMMIT_WORDS[0]}" >> $GITHUB_ENV

###########################


      - name: Start Android Release Build Blink
        uses: ./.github/actions/deploy_action
        with:
          flavor: 'blink'
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          blink_key_store: ${{ secrets.KEYSTORE_BASE64_BLINK }}
          blink_store_password: ${{ secrets.STORE_PASSWORD_BLINK }}
          blink_key_password: ${{ secrets.KEY_PASSWORD_BLINK }}
          blink_key_alias: ${{ secrets.KEY_ALIAS_BLINK }}
          unity_key_store: ${{ secrets.KEYSTORE_BASE64_UNITY }}
          unity_store_password: ${{ secrets.STORE_PASSWORD_UNITY }}
          unity_key_password: ${{ secrets.KEY_PASSWORD_UNITY }}
          unity_key_alias: ${{ secrets.KEY_ALIAS_BLINK }}
          sportico_key_store: ${{ secrets.KEYSTORE_BASE64_SPORTICO }}
          sportico_store_password: ${{ secrets.STORE_PASSWORD_SPORTICO }}
          sportico_key_password: ${{ secrets.KEY_PASSWORD_SPORTICO }}
          sportico_key_alias:  ${{ secrets.KEY_ALIAS_SPORTICO }}
          firebase_file: $BLINK_FIREBASE
          FIREBASE_APP_ID: ${{secrets.FIREBASE_BLINK_APP_ID}}
          CREDENTIAL_FILE_CONTENT: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          release_on: ${{ env.RELEASE_ON }}
          SERVER_WORK_ON: ${{ env.SERVER_WORK_ON }}
          RELEASE_NOTE: ${{ env.RELEASE_NOTE }}




  build_unity :
    name: Build Unity
    runs-on: ubuntu-latest
    environment: hallo
    if: (!contains(github.event.head_commit.message, 'ignore')&&(contains(github.event.head_commit.message, 'android unity')|| contains(github.event.head_commit.message, 'all')))
    env:
      UNITY_FIREBASE: ${{secrets.FIREBASE_GOOGLE_SERVICES_UNITY}}
    steps:

      - uses: actions/checkout@v1

          #Comment Split
      ###########################
      - name: Split Commit Message
        run: |
          COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
          IFS="#" read -ra COMMIT_WORDS <<< "$COMMIT_MESSAGE"
          echo "WORK_APPS=${COMMIT_WORDS[0]}" >> $GITHUB_ENV
          echo "SERVER_WORK_ON=${COMMIT_WORDS[1]}" >> $GITHUB_ENV
          echo "APPS_RELEASE_NOTES=${COMMIT_WORDS[2]}" >> $GITHUB_ENV
          echo "RELEASE_ON=${COMMIT_WORDS[3]}" >> $GITHUB_ENV

      # unity
      - name: Get Release Note
        run: |
          IFS="-" read -ra COMMIT_WORDS <<< "${{ env.APPS_RELEASE_NOTES }}"
          echo "RELEASE_NOTE=${COMMIT_WORDS[1]}" >> $GITHUB_ENV

      ###########################

      - name: Start Android Release Build Unity
        uses: ./.github/actions/deploy_action
        with:
          flavor: 'unity'
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          blink_key_store: ${{ secrets.KEYSTORE_BASE64_BLINK }}
          blink_store_password: ${{ secrets.STORE_PASSWORD_BLINK }}
          blink_key_password: ${{ secrets.KEY_PASSWORD_BLINK }}
          blink_key_alias: ${{ secrets.KEY_ALIAS_BLINK }}
          unity_key_store: ${{ secrets.KEYSTORE_BASE64_UNITY }}
          unity_store_password: ${{ secrets.STORE_PASSWORD_UNITY }}
          unity_key_password: ${{ secrets.KEY_PASSWORD_UNITY }}
          unity_key_alias: ${{ secrets.KEY_ALIAS_BLINK }}
          sportico_key_store: ${{ secrets.KEYSTORE_BASE64_SPORTICO }}
          sportico_store_password: ${{ secrets.STORE_PASSWORD_SPORTICO }}
          sportico_key_password: ${{ secrets.KEY_PASSWORD_SPORTICO }}
          sportico_key_alias: ${{ secrets.KEY_ALIAS_SPORTICO }}
          firebase_file: $UNITY_FIREBASE
          FIREBASE_APP_ID: ${{secrets.FIREBASE_UNITY_APP_ID}}
          CREDENTIAL_FILE_CONTENT: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          release_on: ${{ env.RELEASE_ON }}
          SERVER_WORK_ON: ${{ env.SERVER_WORK_ON }}
          RELEASE_NOTE: ${{ env.RELEASE_NOTE }}

  build_sportico :
    name: Build Sportico
    runs-on: ubuntu-latest
    environment: hallo
    if: (!contains(github.event.head_commit.message, 'ignore')&&(contains(github.event.head_commit.message, 'android sportico')|| contains(github.event.head_commit.message, 'all')))
    env:
      UNITY_FIREBASE: ${{secrets.FIREBASE_GOOGLE_SERVICES_SPORTICO}}
    steps:

      - uses: actions/checkout@v1
          #Comment Split
###########################
      - name: Split Commit Message
        run: |
          COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
          IFS="#" read -ra COMMIT_WORDS <<< "$COMMIT_MESSAGE"
          echo "WORK_APPS=${COMMIT_WORDS[0]}" >> $GITHUB_ENV
          echo "SERVER_WORK_ON=${COMMIT_WORDS[1]}" >> $GITHUB_ENV
          echo "APPS_RELEASE_NOTES=${COMMIT_WORDS[2]}" >> $GITHUB_ENV
          echo "RELEASE_ON=${COMMIT_WORDS[3]}" >> $GITHUB_ENV

      # sportico
      - name: Get Release Note
        run: |
          IFS="-" read -ra COMMIT_WORDS <<< "${{ env.APPS_RELEASE_NOTES }}"
          echo "RELEASE_NOTE=${COMMIT_WORDS[2]}" >> $GITHUB_ENV
      ###########################

      - name: Start Android Release Build Sportico
        uses: ./.github/actions/deploy_action
        with:
          flavor: 'sportico'
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          blink_key_store: ${{ secrets.KEYSTORE_BASE64_BLINK }}
          blink_store_password: ${{ secrets.STORE_PASSWORD_BLINK }}
          blink_key_password: ${{ secrets.KEY_PASSWORD_BLINK }}
          blink_key_alias: ${{ secrets.KEY_ALIAS_BLINK }}
          unity_key_store: ${{ secrets.KEYSTORE_BASE64_UNITY }}
          unity_store_password: ${{ secrets.STORE_PASSWORD_UNITY }}
          unity_key_password: ${{ secrets.KEY_PASSWORD_UNITY }}
          unity_key_alias: ${{ secrets.KEY_ALIAS_BLINK }}
          sportico_key_store: ${{ secrets.KEYSTORE_BASE64_SPORTICO }}
          sportico_store_password: ${{ secrets.STORE_PASSWORD_SPORTICO }}
          sportico_key_password: ${{ secrets.KEY_PASSWORD_SPORTICO }}
          sportico_key_alias: ${{ secrets.KEY_ALIAS_SPORTICO }}
          firebase_file: $SPORTICO_FIREBASE
          FIREBASE_APP_ID: ${{secrets.FIREBASE_SPORTICO_APP_ID}}
          CREDENTIAL_FILE_CONTENT: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          release_on: ${{ env.RELEASE_ON }}
          SERVER_WORK_ON: ${{ env.SERVER_WORK_ON }}
          RELEASE_NOTE: ${{ env.RELEASE_NOTE }}