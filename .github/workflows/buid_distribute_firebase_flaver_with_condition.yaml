on:
  pull_request:
    branches:
      - main
      - master
  push:
    branches:
      - main
      - master
      - develop

#  androidBlink # server staging # fixing blink home page \n version 2.5.0 build 5 - fixing  home page \n version 1.0.0 build 9 - fixing home page \n version 1.0.0 build 5 # apk, firebase
name: "Build Android With Condition "
jobs:
#  starter-job:
#    name: Set Configrations
#    runs-on: ubuntu-latest
#    environment: hallo
#    env:
#      BLINK_FIREBASE: ${{secrets.FIREBASE_GOOGLE_SERVICES_BLINK}}
#    if: (!contains(github.event.head_commit.message, 'ignore')&&contains(github.event.head_commit.message, 'android'))
#    steps:
#      - name: Download blink Android keystore
#        id: android_blink_keystore
#        uses: timheuer/base64-to-file@v1.0.3
#        with:
#          fileName: blink-keystore.jks
#          encodedString: ${{ secrets.KEYSTORE_BASE64_BLINK }}
#
#      - name: Download unity Android keystore
#        id: android_unity_keystore
#        uses: timheuer/base64-to-file@v1.0.3
#        with:
#          fileName: unity-keystore.jks
#          encodedString: ${{ secrets.KEYSTORE_BASE64_UNITY }}
#
#      - name: Download sportico Android keystore
#        id: android_sportico_keystore
#        uses: timheuer/base64-to-file@v1.0.3
#        with:
#          fileName: sportico-keystore.jks
#          encodedString: ${{ secrets.KEYSTORE_BASE64_SPORTICO }}
#
#
#      - name: Create key.properties
#        run: |
#          echo "storeFile=${{ steps.android_blink_keystore.outputs.filePath }}" > android/key1.properties
#          echo "storePassword=${{ secrets.STORE_PASSWORD_BLINK }}" >> android/key1.properties
#          echo "keyPassword=${{ secrets.KEY_PASSWORD_BLINK }}" >> android/key1.properties
#          echo "keyAlias=${{ secrets.KEY_ALIAS_BLINK }}" >> android/key1.properties
#
#          echo "storeFile=${{ steps.android_unity_keystore.outputs.filePath }}" > android/key2.properties
#          echo "storePassword=${{ secrets.STORE_PASSWORD_UNITY }}" >> android/key2.properties
#          echo "keyPassword=${{ secrets.KEY_PASSWORD_UNITY }}" >> android/key2.properties
#          echo "keyAlias=${{ secrets.KEY_ALIAS_UNITY }}" >> android/key2.properties
#
#          echo "storeFile=${{ steps.android_sportico_keystore.outputs.filePath }}" > android/key3.properties
#          echo "storePassword=${{ secrets.STORE_PASSWORD_SPORTICO }}" >> android/key3.properties
#          echo "keyPassword=${{ secrets.KEY_PASSWORD_SPORTICO }}" >> android/key3.properties
#          echo "keyAlias=${{ secrets.KEY_ALIAS_SPORTICO }}" >> android/key3.properties
#
#      - uses: actions/setup-java@v1
#        with:
#          distribution: 'zulu'
#          java-version: "12.x"
#          cache: gradle
#      - uses: subosito/flutter-action@v1
#        with:
#          flutter-version: "3.16.1"
#          channel: 'stable'
#          cache: true
#
#
#      - name: Download firebase google services for blink
#        run: echo "$BLINK_FIREBASE" | base64 -d > android/app/src/blink/google-services.json


  build_blink:
    name: Build Blink
    runs-on: ubuntu-latest
    environment: hallo
    env:
      BLINK_FIREBASE: ${{secrets.FIREBASE_GOOGLE_SERVICES_BLINK}}
    if: (!contains(github.event.head_commit.message, 'ignore')&&(contains(github.event.head_commit.message, 'androidBlink') || contains(github.event.head_commit.message, 'all')))
    steps:
      - uses: actions/checkout@v1
        # Make sure the @v0.8.0 matches the current version of the action
      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

          #Comment Split
      ###########################

      - name: Split Commit Message
        run: |
          COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
          IFS="#" read -ra COMMIT_WORDS <<< "$COMMIT_MESSAGE"
          echo "WORK_APPS=${COMMIT_WORDS[0]}" >> $GITHUB_ENV
          echo "SERVER_WORK_ON=${COMMIT_WORDS[1]}" >> $GITHUB_ENV
          echo "APPS_RELEASE_NOTES=${COMMIT_WORDS[2]}" >> $GITHUB_ENV
          echo "RELEASE_ON=${COMMIT_WORDS[3]}" >> $GITHUB_ENV

      # blink
      - name: Get Release Note
        run: |
          IFS="-" read -ra COMMIT_WORDS <<< "${{ env.APPS_RELEASE_NOTES }}"
          echo "RELEASE_NOTE=${COMMIT_WORDS[0]}" >> $GITHUB_ENV

###########################


          
      

      - name: Download blink Android keystore
        id: android_blink_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: blink-keystore.jks
          encodedString: ${{ secrets.KEYSTORE_BASE64_BLINK }}

      - name: Download unity Android keystore
        id: android_unity_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: unity-keystore.jks
          encodedString: ${{ secrets.KEYSTORE_BASE64_UNITY }}

      - name: Download sportico Android keystore
        id: android_sportico_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: sportico-keystore.jks
          encodedString: ${{ secrets.KEYSTORE_BASE64_SPORTICO }}


      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_blink_keystore.outputs.filePath }}" > android/key1.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD_BLINK }}" >> android/key1.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD_BLINK }}" >> android/key1.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS_BLINK }}" >> android/key1.properties
          
          echo "storeFile=${{ steps.android_unity_keystore.outputs.filePath }}" > android/key2.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD_UNITY }}" >> android/key2.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD_UNITY }}" >> android/key2.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS_UNITY }}" >> android/key2.properties
          
          echo "storeFile=${{ steps.android_sportico_keystore.outputs.filePath }}" > android/key3.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD_SPORTICO }}" >> android/key3.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD_SPORTICO }}" >> android/key3.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS_SPORTICO }}" >> android/key3.properties

      - uses: actions/setup-java@v1
        with:
          distribution: 'zulu'
          java-version: "17"
          cache: gradle
          check-latest: true

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: "3.16.1"
          channel: 'stable'
          cache: true

      - name: Download firebase google services for blink
        run: echo "$BLINK_FIREBASE" | base64 -d > android/app/src/blink/google-services.json


      - name: Get dependencies
        run: flutter pub get
      # Build Apk blink
#      - name: Start Android Release Build Blink
#        run: flutter build apk --flavor blink -t lib/main.dart
      - name: Start Android Release Build Blink
        uses: ./.github/actions/deploy_action.yaml
        with:
          flavor: 'blink'


        # Upload Android Blink
      - name: Upload Android Blink Release
        uses: actions/upload-artifact@v2
        with:
          name: android-blink-release
          path: build/app/outputs/flutter-apk/app-blink-release.apk

          # Distribution Blink
      - name: Firebase Blink Distribution
        if: contains("${{ env.RELEASE_ON }}", 'firebase')
        uses: wzieba/Firebase-Distribution-Github-Action@v1.7.0
        with:
          appId: ${{secrets.FIREBASE_BLINK_APP_ID}}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: testers
          file: build/app/outputs/flutter-apk/app-blink-release.apk
          releaseNotes: "Blink Apk \n ${{ env.SERVER_WORK_ON }} \n ${{ env.RELEASE_NOTE }}"
          #          releaseNotes:  "${{ github.event.head_commit.message }}"



  build_unity :
    name: Build Unity
    runs-on: ubuntu-latest
    environment: hallo
    if: (!contains(github.event.head_commit.message, 'ignore')&&(contains(github.event.head_commit.message, 'android unity')|| contains(github.event.head_commit.message, 'all')))
    env:
      UNITY_FIREBASE: ${{secrets.FIREBASE_GOOGLE_SERVICES_UNITY}}
    steps:
      - uses: actions/checkout@v1
      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

          #Comment Split
      ###########################
      - name: Split Commit Message
        run: |
          COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
          IFS="#" read -ra COMMIT_WORDS <<< "$COMMIT_MESSAGE"
          echo "WORK_APPS=${COMMIT_WORDS[0]}" >> $GITHUB_ENV
          echo "SERVER_WORK_ON=${COMMIT_WORDS[1]}" >> $GITHUB_ENV
          echo "APPS_RELEASE_NOTES=${COMMIT_WORDS[2]}" >> $GITHUB_ENV
          echo "RELEASE_ON=${COMMIT_WORDS[3]}" >> $GITHUB_ENV

      # unity
      - name: Get Release Note
        run: |
          IFS="-" read -ra COMMIT_WORDS <<< "${{ env.APPS_RELEASE_NOTES }}"
          echo "RELEASE_NOTE=${COMMIT_WORDS[1]}" >> $GITHUB_ENV

      ###########################


      - name: Download blink Android keystore
        id: android_blink_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: blink-keystore.jks
          encodedString: ${{ secrets.KEYSTORE_BASE64_BLINK }}

      - name: Download unity Android keystore
        id: android_unity_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: unity-keystore.jks
          encodedString: ${{ secrets.KEYSTORE_BASE64_UNITY }}

      - name: Download sportico Android keystore
        id: android_sportico_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: sportico-keystore.jks
          encodedString: ${{ secrets.KEYSTORE_BASE64_SPORTICO }}


      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_blink_keystore.outputs.filePath }}" > android/key1.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD_BLINK }}" >> android/key1.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD_BLINK }}" >> android/key1.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS_BLINK }}" >> android/key1.properties
          
          echo "storeFile=${{ steps.android_unity_keystore.outputs.filePath }}" > android/key2.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD_UNITY }}" >> android/key2.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD_UNITY }}" >> android/key2.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS_UNITY }}" >> android/key2.properties
          
          echo "storeFile=${{ steps.android_sportico_keystore.outputs.filePath }}" > android/key3.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD_SPORTICO }}" >> android/key3.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD_SPORTICO }}" >> android/key3.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS_SPORTICO }}" >> android/key3.properties

      - uses: actions/setup-java@v1
        with:
          distribution: 'zulu'
          java-version: "17"
          cache: gradle
          check-latest: true

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: "3.16.1"
          channel: 'stable'
          cache: true
      - name: Download firebase google services for unity
        run: echo "$UNITY_FIREBASE" | base64 -d > android/app/src/unity/google-services.json


      - name: Get dependencies
        run: flutter pub get
        # Build Apk unity
#      - name: Start Android Release Build Unity
#        run: flutter build apk --flavor unity -t lib/main.dart
      - name: Start Android Release Build Unity
        uses: ./.github/actions/deploy_action.yaml
        with:
          flavor: 'unity'

          # Upload Android Unity
      - name: Upload Android Unity Release
        uses: actions/upload-artifact@v2
        with:
          name: android-unity-release
          path: build/app/outputs/flutter-apk/app-unity-release.apk

          # Distribution Unity
      - name: Firebase Unity Distribution
        if: contains("${{ env.RELEASE_ON }}", 'firebase')
        uses: wzieba/Firebase-Distribution-Github-Action@v1.7.0
        with:
          appId: ${{secrets.FIREBASE_UNITY_APP_ID}}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: testers
          file: build/app/outputs/flutter-apk/app-unity-release.apk
          releaseNotes: "Unity Apk \n ${{ env.SERVER_WORK_ON }} \n ${{ env.RELEASE_NOTE }}"

  build_sportico :
    name: Build Sportico
    runs-on: ubuntu-latest
    environment: hallo
    if: (!contains(github.event.head_commit.message, 'ignore')&&(contains(github.event.head_commit.message, 'android sportico')|| contains(github.event.head_commit.message, 'all')))
    env:
      UNITY_FIREBASE: ${{secrets.FIREBASE_GOOGLE_SERVICES_SPORTICO}}
    steps:
      - uses: actions/checkout@v1
      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
          #Comment Split
###########################
      - name: Split Commit Message
        run: |
          COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
          IFS="#" read -ra COMMIT_WORDS <<< "$COMMIT_MESSAGE"
          echo "WORK_APPS=${COMMIT_WORDS[0]}" >> $GITHUB_ENV
          echo "SERVER_WORK_ON=${COMMIT_WORDS[1]}" >> $GITHUB_ENV
          echo "APPS_RELEASE_NOTES=${COMMIT_WORDS[2]}" >> $GITHUB_ENV
          echo "RELEASE_ON=${COMMIT_WORDS[3]}" >> $GITHUB_ENV

      # sportico
      - name: Get Release Note
        run: |
          IFS="-" read -ra COMMIT_WORDS <<< "${{ env.APPS_RELEASE_NOTES }}"
          echo "RELEASE_NOTE=${COMMIT_WORDS[2]}" >> $GITHUB_ENV
      ###########################

      - name: Download blink Android keystore
        id: android_blink_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: blink-keystore.jks
          encodedString: ${{ secrets.KEYSTORE_BASE64_BLINK }}

      - name: Download unity Android keystore
        id: android_unity_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: unity-keystore.jks
          encodedString: ${{ secrets.KEYSTORE_BASE64_UNITY }}

      - name: Download sportico Android keystore
        id: android_sportico_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: sportico-keystore.jks
          encodedString: ${{ secrets.KEYSTORE_BASE64_SPORTICO }}


      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_blink_keystore.outputs.filePath }}" > android/key1.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD_BLINK }}" >> android/key1.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD_BLINK }}" >> android/key1.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS_BLINK }}" >> android/key1.properties
          
          echo "storeFile=${{ steps.android_unity_keystore.outputs.filePath }}" > android/key2.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD_UNITY }}" >> android/key2.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD_UNITY }}" >> android/key2.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS_UNITY }}" >> android/key2.properties
          
          echo "storeFile=${{ steps.android_sportico_keystore.outputs.filePath }}" > android/key3.properties
          echo "storePassword=${{ secrets.STORE_PASSWORD_SPORTICO }}" >> android/key3.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD_SPORTICO }}" >> android/key3.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS_SPORTICO }}" >> android/key3.properties

      - uses: actions/setup-java@v1
        with:
          distribution: 'zulu'
          java-version: "17"
          cache: gradle
          check-latest: true

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: "3.16.1"
          channel: 'stable'
          cache: true
      - name: Download firebase google services for sportico
        run: echo "$SPORTICO_FIREBASE" | base64 -d > android/app/src/unity/google-services.json


      - name: Get dependencies
        run: flutter pub get
        # Build Apk Sportico
#      - name: Start Android Release Build Sportico
#        run: flutter build apk --flavor sportico -t lib/main.dart
      - name: Start Android Release Build Sportico
        uses: ./.github/actions/deploy_action.yaml
        with:
          flavor: 'sportico'

          # Upload Android Sportico
      - name: Upload Android Sportico Release
        uses: actions/upload-artifact@v2
        with:
          name: android-sportico-release
          path: build/app/outputs/flutter-apk/app-sportico-release.apk

          # Distribution Sportico
      - name: Firebase Sportico Distribution
        if: contains("${{ env.RELEASE_ON }}", 'firebase')
        uses: wzieba/Firebase-Distribution-Github-Action@v1.7.0
        with:
          appId: ${{secrets.FIREBASE_SPORTICO_APP_ID}}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          groups: testers
          file: build/app/outputs/flutter-apk/app-sportico-release.apk
          releaseNotes: "Sportico Apk \n ${{ env.SERVER_WORK_ON }} \n ${{ env.RELEASE_NOTE }}"








